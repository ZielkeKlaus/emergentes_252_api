generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Categoria {
  id        Int     @id @default(autoincrement())
  nome      String
  cursos    Curso[]
  @@map("categorias")
}

model Usuario {
  id         String    @id @default(uuid())
  nome       String
  email      String    @unique
  senha      String
  tipo       String
  cidade     String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  matriculas Matricula[]
  avaliacoes Avaliacao[]
  cursosInstrutor Curso[]
  @@map("usuarios")
}

model Curso {
  id            Int       @id @default(autoincrement())
  titulo        String
  descricao     String
  cargaHoraria  Int
  categoria     Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId   Int
  instrutor     Usuario   @relation(fields: [instrutorId], references: [id])
  instrutorId   String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  matriculas    Matricula[]
  avaliacoes    Avaliacao[]
  @@map("cursos")
}

model Matricula {
  id         Int      @id @default(autoincrement())
  aluno      Usuario  @relation(fields: [alunoId], references: [id])
  alunoId    String
  curso      Curso    @relation(fields: [cursoId], references: [id])
  cursoId    Int
  data       DateTime @default(now())
  @@map("matriculas")
}

model Avaliacao {
  id         Int      @id @default(autoincrement())
  aluno      Usuario  @relation(fields: [alunoId], references: [id])
  alunoId    String
  curso      Curso    @relation(fields: [cursoId], references: [id])
  cursoId    Int
  nota       Int
  comentario String?
  createdAt  DateTime @default(now())
  @@map("avaliacoes")
}

model Admin {
  id        String   @id @default(uuid())
  nome      String
  email     String   @unique
  senha     String
  nivel     Int      @default(2)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  logs      Log[]
  @@map("admins")
}

model Log {
  id          Int      @id @default(autoincrement())
  admin       Admin    @relation(fields: [adminId], references: [id])
  adminId     String
  descricao   String
  complemento String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@map("logs")
}
